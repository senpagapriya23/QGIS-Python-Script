import qgis
import sys 
from qgis.core import QgsApplication,QgsVectorLayer,QgsDxfExport,QgsCoordinateReferenceSystem
import processing
from processing.core.Processing import Processing
import PyQt5.QtWidgets
from  PyQt5.QtCore import QFile

QgsApplication.setPrefixPath("C:/OSGeo4W/apps/qgis", True)
qgs = QgsApplication([], False)
qgs.initQgis()
sys.path.append('C:/OSGeo4W/apps/qgis/python/plugins')

def get_feature_from_bbox(WMS_URL, bbox, CRS, height, width, layer_name):
    for x in range(int(width)):
        for y in range(int(height)):
                layer= WMS_URL+"&VERSION=1.3.0&REQUEST=GetFeatureInfo&BBOX="+bbox+"&CRS="+CRS+"&WIDTH="+width+"&HEIGHT="+height+"&LAYERS="+layer_name+"&FEATURE_COUNT=10&STYLES=&FORMAT=image/png&QUERY_LAYERS="+layer_name+"&INFO_FORMAT=application/json&I="+str(x)+"&J="+str(y)
                print(layer)
                vlayer = QgsVectorLayer(layer,"vlayer","ogr")  
                field_count = vlayer.fields().count()
                if field_count != 0:
                        listLayers.append(vlayer)
#     print(listLayers)
    Processing.initialize()
### merge all shapefile(vector) 
    Processing.runAlgorithm("qgis:mergevectorlayers", 
                                {'LAYERS':listLayers,
                                'CRS':CRS,
                                'OUTPUT':"E:/dxf/merge.shp"})
### filter duplicates
    processing.run("qgis:removeduplicatesbyattribute",
                               {'INPUT':"E:/dxf/merge.shp",
                                'FIELDS':"fid",
                                'CRS':CRS,
                                'OUTPUT':"E:/dxf/filter.shp"})
    ### vector to dxf                           
    dxfExport = QgsDxfExport()
    filter_layer = "E:/dxf/filter_py.shp"
    flayer = QgsVectorLayer(filter_layer,"flayer","ogr")  
    lyr_names = [QgsDxfExport.DxfLayer(flayer)]
    #dxfExport.addLayers([QgsDxfExport.DxfLayer(lyr) for lyr in lyr_names])
    #dxfExport.setMapSettings( settings )
    dxfExport.addLayers( lyr_names )
    dxfExport.setSymbologyScale(1000000)
    dxfExport.setSymbologyExport(1)
    dxfExport.setLayerTitleAsName(-1)
    dxfExport.setDestinationCrs(QgsCoordinateReferenceSystem("EPSG:4326-WGS84"))
    dxfExport.setForce2d(0)
    #dxfExport.setExtent(extent)
    dxfFile = QFile('E:\\dxf\\dxf_test.dxf')
    dxfExport.writeToFile( dxfFile, 'utf-8' )


listLayers=[]
featureCollection = get_feature_from_bbox("https://e8b2-213-136-49-186.eu.ngrok.io/geoserver/ockero/wms?service=WMS", "57.70547630632324854,11.64482801766406439,57.72092663615548247,11.65861925167538615",
                     "EPSG:4326","400","167","fiber")
qgs.exitQgis()
